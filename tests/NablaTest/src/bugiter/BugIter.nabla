module BugIter;

with Math.*;

itemtypes { cell, node }

connectivity cells: → {cell};
connectivity nodes: → {node};

let ℝ t = 0.0;

option ℝ maxTime = 0.1;
option ℕ maxIter = 500;
option ℕ maxIterK = 500;
option ℕ maxIterL = 500;
option ℝ δt = 1.0;

ℝ[2] X{nodes};
ℝ u{cells}; // Temperature
ℝ v{cells}; // vn+1 computed with iteration on k
ℝ w{cells}; // wn+1 computed with iteration on l

//iterate n while (t^{n+1} < maxTime && n+1 < maxIter), k while (k+1 < maxIterK);

iterate n while (t^{n+1} < maxTime && n+1 < maxIter), { 
			k while (k+1 < maxIterK);
			l while (l+1 < maxIterL);
		}

InitU: ∀c∈cells(), u^{n}{c} = 0.0;
IniV: ∀c∈cells(), v^{n+1, k=0}{c} = u^{n}{c} + 1;
UpdateV: ∀c∈cells(), v^{n+1, k+1}{c} = v^{n+1, k}{c} + 1.5;
IniW: ∀c∈cells(), w^{n+1, l=0}{c} = v^{n+1}{c};
UpdateW: ∀c∈cells(), w^{n+1, l+1}{c} = w^{n+1, l}{c} + 2.5;
UpdateU: ∀c∈cells(), u^{n+1}{c} = w^{n+1}{c};
//UpdateU: ∀c∈cells(), u^{n+1}{c} = v^{n+1}{c};
ComputeTn: t^{n+1} = t^{n} + δt;
