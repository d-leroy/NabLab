/*******************************************************************************
 * Copyright (c) 2020 CEA
 * This program and the accompanying materials are made available under the 
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 * Contributors: see AUTHORS file
 *******************************************************************************/
module Math;

// ***** REDUCTIONS *****
def ∑, 0.0: ℝ, (a, b) → return a + b;
def ∑, 0.0: x | ℝ[x], (a, b) → return a + b;
def ∑, 0.0: x | ℝ[x, x], (a, b) → return a + b;

def ∏, 1.0: ℝ, (a, b) → return a * b;
def ∏, 1.0: x | ℝ[x], (a, b) → return a * b;
def ∏, 1.0: x | ℝ[x, x], (a, b) → return a * b;

def Min, ℝ.MaxValue: ℝ, (a, b) → return min(a, b);
def Max, ℝ.MinValue: ℝ, (a, b) → return max(a, b);

// ***** FUNCTIONS *****
def fabs: ℝ → ℝ;
def √: ℝ → ℝ;
def min: ℝ × ℝ → ℝ;
def max: ℝ × ℝ → ℝ;
def sin: ℝ → ℝ;
def cos: ℝ → ℝ;
def asin: ℝ → ℝ;
def acos: ℝ → ℝ;

def	matVectProduct: x, y  | ℝ[x,y] × ℝ[y] → ℝ[x];
def dot: x | ℝ[x] × ℝ[x] → ℝ;	// scalar product
def det: ℝ[2] × ℝ[2] → ℝ;		// determinant = produit vectoriel en 2D
def det: ℝ[2,2] → ℝ;
def norm: x | ℝ[x] → ℝ;
